/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.pepsoft.worldpainter;

import org.pepsoft.minecraft.SuperflatPreset;
import org.pepsoft.worldpainter.biomeschemes.AbstractMinecraft1_1BiomeScheme;
import org.pepsoft.worldpainter.biomeschemes.Minecraft1_13Biomes;
import org.pepsoft.worldpainter.biomeschemes.Minecraft1_7Biomes;

import javax.swing.*;
import java.awt.*;
import java.util.stream.IntStream;

import static org.pepsoft.minecraft.Constants.MC_DIRT;

/**
 *
 * @author Pepijn
 */
public class EditSuperflatPresetDialog extends WorldPainterDialog {
    /**
     * Creates new form EditSuperflatPresetDialog
     */
    public EditSuperflatPresetDialog(Window parent, Platform platform, SuperflatPreset superflatPreset, boolean structures) {
        super(parent);
        this.platform = platform;
        this.superflatPreset = superflatPreset;
        this.structures = structures;

        initComponents();

        String[] biomeNames;
        if (platform == DefaultPlugin.JAVA_MCREGION) {
            biomeNames = AbstractMinecraft1_1BiomeScheme.BIOME_NAMES;
        } else if (platform == DefaultPlugin.JAVA_ANVIL) {
            biomeNames = Minecraft1_7Biomes.BIOME_NAMES;
        } else {
            // Default to 1.13 biomes for now, even for other platforms
            // TODO move available biomes to Platform
            biomeNames = Minecraft1_13Biomes.BIOME_NAMES;
        }
        Integer[] availableBiomes = IntStream.range(0, biomeNames.length).filter(i -> biomeNames[i] != null).boxed().toArray(Integer[]::new);
        comboBoxBiome.setModel(new DefaultComboBoxModel<>(availableBiomes));
        comboBoxBiome.setRenderer(new DefaultListCellRenderer() {
            @Override
            public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                setText(biomeNames[(Integer) value] + " (" + value + ")");
                return this;
            }
        });
        comboBoxBiome.setSelectedItem(superflatPreset.getBiome());

        tableLayers.setModel(new SuperflatPresetTableModel(superflatPreset));

        checkBoxStructures.setSelected(structures);

        setControlStates();
        
        getRootPane().setDefaultButton(buttonOK);
        pack();
        setLocationRelativeTo(parent);
    }

    public boolean isStructures() {
        return structures;
    }

    private void setControlStates() {
        checkBoxBiome_1.setEnabled(structures);
        checkBoxDecoration.setEnabled(structures);
        checkBoxDungeon.setEnabled(structures);
        checkBoxLake.setEnabled(structures);
        checkBoxLava_lake.setEnabled(structures);
        checkBoxMineshaft.setEnabled(structures);
        checkBoxStronghold.setEnabled(structures);
        checkBoxVillage.setEnabled(structures);
    }

    private boolean save() {
        // TODO
        return true;
    }

    private void addLayer() {
        SuperflatPreset.Layer layer = new SuperflatPreset.Layer(MC_DIRT, 1);
        EditSuperflatPresetLayerDialog dialog = new EditSuperflatPresetLayerDialog(this, platform, layer);
        dialog.setVisible(true);
        if (! dialog.isCancelled()) {

        }
    }

    private void editLayer() {

    }

    private void deleteLayer() {

    }

    private void moveLayerUp() {

    }

    private void moveLayerDown() {

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableLayers = new javax.swing.JTable();
        buttonLayerAdd = new javax.swing.JButton();
        buttonLayerDelete = new javax.swing.JButton();
        buttonLayerMoveUp = new javax.swing.JButton();
        buttonLayerMoveDown = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        comboBoxBiome = new javax.swing.JComboBox<>();
        checkBoxStructures = new javax.swing.JCheckBox();
        checkBoxVillage = new javax.swing.JCheckBox();
        checkBoxBiome_1 = new javax.swing.JCheckBox();
        checkBoxDecoration = new javax.swing.JCheckBox();
        checkBoxStronghold = new javax.swing.JCheckBox();
        checkBoxMineshaft = new javax.swing.JCheckBox();
        checkBoxDungeon = new javax.swing.JCheckBox();
        checkBoxLake = new javax.swing.JCheckBox();
        checkBoxLava_lake = new javax.swing.JCheckBox();
        buttonCancel = new javax.swing.JButton();
        buttonOK = new javax.swing.JButton();
        buttonLayerEdit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Edit Superflat Preset");

        jLabel1.setText("Biome:");

        tableLayers.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableLayers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableLayersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableLayers);

        buttonLayerAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/pepsoft/worldpainter/icons/brick_add.png"))); // NOI18N
        buttonLayerAdd.setToolTipText("Add a layer.");
        buttonLayerAdd.setMargin(new java.awt.Insets(2, 2, 2, 2));
        buttonLayerAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLayerAddActionPerformed(evt);
            }
        });

        buttonLayerDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/pepsoft/worldpainter/icons/brick_delete.png"))); // NOI18N
        buttonLayerDelete.setToolTipText("Delete the selected layer.");
        buttonLayerDelete.setEnabled(false);
        buttonLayerDelete.setMargin(new java.awt.Insets(2, 2, 2, 2));
        buttonLayerDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLayerDeleteActionPerformed(evt);
            }
        });

        buttonLayerMoveUp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/pepsoft/worldpainter/icons/arrow_up.png"))); // NOI18N
        buttonLayerMoveUp.setEnabled(false);
        buttonLayerMoveUp.setMargin(new java.awt.Insets(2, 2, 2, 2));
        buttonLayerMoveUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLayerMoveUpActionPerformed(evt);
            }
        });

        buttonLayerMoveDown.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/pepsoft/worldpainter/icons/arrow_down.png"))); // NOI18N
        buttonLayerMoveDown.setEnabled(false);
        buttonLayerMoveDown.setMargin(new java.awt.Insets(2, 2, 2, 2));
        buttonLayerMoveDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLayerMoveDownActionPerformed(evt);
            }
        });

        jLabel2.setText("Layers:");

        checkBoxStructures.setText("Structures");
        checkBoxStructures.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxStructuresActionPerformed(evt);
            }
        });

        checkBoxVillage.setText("Villages");
        checkBoxVillage.setEnabled(false);

        checkBoxBiome_1.setText("Biome-specific Structures (temples, witch huts, etc.)");
        checkBoxBiome_1.setEnabled(false);

        checkBoxDecoration.setText("Decoration (vegetation, ores, etc.)");
        checkBoxDecoration.setEnabled(false);

        checkBoxStronghold.setText("Stronghold");
        checkBoxStronghold.setEnabled(false);

        checkBoxMineshaft.setText("Mineshafts");
        checkBoxMineshaft.setEnabled(false);

        checkBoxDungeon.setText("Dungeons");
        checkBoxDungeon.setEnabled(false);

        checkBoxLake.setText("Lakes");
        checkBoxLake.setEnabled(false);

        checkBoxLava_lake.setText("Lava Lakes");
        checkBoxLava_lake.setEnabled(false);

        buttonCancel.setText("Cancel");
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        buttonOK.setText("OK");
        buttonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOKActionPerformed(evt);
            }
        });

        buttonLayerEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/pepsoft/worldpainter/icons/brick_edit.png"))); // NOI18N
        buttonLayerEdit.setEnabled(false);
        buttonLayerEdit.setMargin(new java.awt.Insets(2, 2, 2, 2));
        buttonLayerEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLayerEditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(buttonLayerAdd, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(buttonLayerEdit, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(buttonLayerMoveUp, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(buttonLayerMoveDown, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(buttonLayerDelete, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkBoxStructures)
                                    .addComponent(jLabel2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(comboBoxBiome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkBoxVillage)
                            .addComponent(checkBoxMineshaft)
                            .addComponent(checkBoxLake))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkBoxDungeon)
                                    .addComponent(checkBoxStronghold))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkBoxDecoration)
                                    .addComponent(checkBoxBiome_1)))
                            .addComponent(checkBoxLava_lake))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonOK)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonCancel)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(comboBoxBiome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonLayerAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonLayerEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonLayerMoveUp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonLayerMoveDown)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonLayerDelete)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(checkBoxStructures)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkBoxVillage)
                    .addComponent(checkBoxBiome_1)
                    .addComponent(checkBoxStronghold))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkBoxDecoration)
                    .addComponent(checkBoxMineshaft)
                    .addComponent(checkBoxDungeon))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkBoxLake)
                    .addComponent(checkBoxLava_lake))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCancel)
                    .addComponent(buttonOK))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        cancel();
    }//GEN-LAST:event_buttonCancelActionPerformed

    private void buttonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOKActionPerformed
        if (save()) {
            ok();
        }
    }//GEN-LAST:event_buttonOKActionPerformed

    private void checkBoxStructuresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxStructuresActionPerformed
        setControlStates();
    }//GEN-LAST:event_checkBoxStructuresActionPerformed

    private void buttonLayerAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLayerAddActionPerformed
        addLayer();
    }//GEN-LAST:event_buttonLayerAddActionPerformed

    private void buttonLayerMoveUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLayerMoveUpActionPerformed
        moveLayerUp();
    }//GEN-LAST:event_buttonLayerMoveUpActionPerformed

    private void buttonLayerMoveDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLayerMoveDownActionPerformed
        moveLayerDown();
    }//GEN-LAST:event_buttonLayerMoveDownActionPerformed

    private void buttonLayerDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLayerDeleteActionPerformed
        deleteLayer();
    }//GEN-LAST:event_buttonLayerDeleteActionPerformed

    private void buttonLayerEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLayerEditActionPerformed
        editLayer();
    }//GEN-LAST:event_buttonLayerEditActionPerformed

    private void tableLayersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableLayersMouseClicked
        if (evt.getClickCount() == 2) {
            editLayer();
        }
    }//GEN-LAST:event_tableLayersMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonLayerAdd;
    private javax.swing.JButton buttonLayerDelete;
    private javax.swing.JButton buttonLayerEdit;
    private javax.swing.JButton buttonLayerMoveDown;
    private javax.swing.JButton buttonLayerMoveUp;
    private javax.swing.JButton buttonOK;
    private javax.swing.JCheckBox checkBoxBiome_1;
    private javax.swing.JCheckBox checkBoxDecoration;
    private javax.swing.JCheckBox checkBoxDungeon;
    private javax.swing.JCheckBox checkBoxLake;
    private javax.swing.JCheckBox checkBoxLava_lake;
    private javax.swing.JCheckBox checkBoxMineshaft;
    private javax.swing.JCheckBox checkBoxStronghold;
    private javax.swing.JCheckBox checkBoxStructures;
    private javax.swing.JCheckBox checkBoxVillage;
    private javax.swing.JComboBox<Integer> comboBoxBiome;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableLayers;
    // End of variables declaration//GEN-END:variables

    private SuperflatPreset superflatPreset;
    private Platform platform;
    private boolean structures;
}